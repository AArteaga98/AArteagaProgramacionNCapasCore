@model ML.Usuario
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


    <h2>FORM</h2>
   
  
            @using (Html.BeginForm("Form", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
               
                   
                        <div class="col-md-3" style="display:none">
                            @Html.LabelFor(model => model.IdUsuario, new { @class = "display:none" })
                            @Html.TextBoxFor(model => model.IdUsuario, new { @class = "display:none form-control" })
                            @Html.ValidationMessageFor(model => model.IdUsuario)

                        </div>
                     
                         <div class="container">
                         <div class="row">
                    
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Nombre)
                            @*@Html.TextBoxFor(model => model.Nombre, new { @class = " form-control", @id = "txtNombre",  @onkeypress = "return SoloNumeros(event,'lblNombre')" })*@
                            @Html.TextBoxFor(model => model.Nombre, new { @class = " form-control", @id = "txtNombre",  @onkeypress = "return SoloLetras(event,'lblNombre')" })
                            @Html.ValidationMessageFor(model => model.Nombre)
                            @Html.Label("",null, new {@id="lblNombre"})



                        </div>
                   

                   
                        <div class="col-md-3">


                            @Html.LabelFor(model => model.ApellidoPaterno)
                            @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", @id = "txtApellidoPaterno",  @onkeypress = "return SoloLetras(event,'lblApellidoPaterno')" })
                            @Html.ValidationMessageFor(model => model.ApellidoPaterno)
                            @Html.Label("",null, new {@id="lblApellidoPaterno"})
                        </div>
                    

                   
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.ApellidoMaterno)
                            @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control" , @id = "txtApellidoMaterno",  @onkeypress = "return SoloLetras(event,'lblApellidoMaterno')" })
                            @Html.ValidationMessageFor(model => model.ApellidoMaterno)
                            @Html.Label("",null, new {@id="lblApellidoMaterno"})
                            
                        </div>
                   
                     

                     
                 
                   
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.FechaNacimiento)
                            @Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "form-control", @id="txtFechaNacimiento" })
                            @Html.ValidationMessageFor(model => model.FechaNacimiento)

                        </div>


            <div class="col-md-3">
                @Html.LabelFor(model => model.CURP)
                @Html.TextBoxFor(model => model.CURP, new { @class = "form-control",  @id="txtcurp", @onkeypress="return Curp(event,'lblCurp')" })
                @Html.ValidationMessageFor(model => model.CURP)
                @Html.Label("",null, new {@id="lblCurp"})

            </div>



            <div class="col-md-3">
                            @Html.LabelFor(model => model.Genero)
                           @* @Html.TextBoxFor(model => model.Genero, new { @class = "form-control" })*@


                            @Html.RadioButtonFor(model => model.Genero, "M", false)@Html.Label("Masculino")
                            @Html.RadioButtonFor(model => model.Genero, "F", false)@Html.Label("Femenino")

                            @Html.ValidationMessageFor(model => model.Genero)

                        </div>

                        
                           </div>
                           </div>

                           <div class="container">
                         <div class="row">
                   
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.UserName)
                            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.UserName)

                        </div>
                   
                    
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Email)
                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" , @id="user-email", @type="email" ,name="userEmail", @onchange="return validateEmail()" })
                            @Html.ValidationMessageFor(model => model.Email)
                            @Html.Label("",null, new {@id="lblEmail"})

                        </div>
                    

                    
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Password)
                            @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @type = "password", @id="password",  @onchange="return validatePassword()" })
                            @Html.ValidationMessageFor(model => model.Password)
                            @Html.Label("Minimo 8 caracteres - Maximo 15 - Al menos una letra mayúscula - Al menos una letra minucula - Al menos un dígito - No espacios en blanco - Al menos 1 caracter especial",null, new {@id="lblPassword"})

                        </div>

                        <div class="col-md-3">
                                    <label>
                                Confirm password:
               
                                <input type="password" name="confirm_password" id="confirm_password" onkeyup='check();' />
                                <span id='message'></span>
                           </label>
                                 </div>
                        </div>
                           </div>

                           <div class="container">
                         <div class="row">
                    
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Telefono)
                            @Html.TextBoxFor(model => model.Telefono, new { @class = " form-control", @id = "txtTelefono",  @onkeypress = "return SoloNumeros(event,'lblTelefono')" })
                            @Html.ValidationMessageFor(model => model.Telefono)
                            @Html.Label("",null, new {@id="lblTelefono"})

                        </div>
                    

                    
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Celular)
                            @Html.TextBoxFor(model => model.Celular, new { @class = " form-control", @id = "txtCelular",  @onkeypress = "return SoloNumeros(event,'lblCelular')" })
                            @Html.ValidationMessageFor(model => model.Celular)
                            @Html.Label("",null, new {@id="lblCelular"})

                        </div>


                        </div>
                        </div>

                          <div class="container">
                         <div class="row">
                    
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Rol.IdRol)
                            @*@Html.TextBoxFor(model => model.Rol.IdRol, new { @class = "form-control" })*@
                            @Html.DropDownListFor(model => model.Rol.IdRol, new SelectList(Model.Rol.Roles, "IdRol", "Nombre"), "Selecciona un rol", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Rol.IdRol)
                        </div>
                   
                          </div>
                        </div>

                         <div class="container">
                         <div class="row">
                  
                        <div class="col-md-3">

                            @Html.LabelFor(model=> model.Imagen)
                                @*<span class="input-group-text" id="basic-addon1"><i class="bi bi-card-image"></i></span>*@
                            <input id="IFImage" type='file' class="form-control" name="IFImage" onchange="readUrl(this);  " />
                            

                            @if (Model.Imagen != null)
                            {

                                <img id="ImagenPreview" src="data:image/*;base64,@Model.Imagen" style="width:150px ; height:150px" />

                            }
                            else
                            {
                                <img id="ImagenPreview" src="~/Imagenes/SinUsuario.png" style="width:150px ; height:150px" />
                            }
                        @Html.ValidationMessageFor(model => model.Imagen)

                        </div>
                        
                        @Html.HiddenFor(model => model.Imagen)

                        </div>
                        </div>


                          <div class="container">
                         <div class="row">
                   
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais)

                            @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Pais.Paises, "IdPais", "Nombre"), "Selecciona una opción", new { id = "ddlPais", @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais)



                        </div>
                  

                    
                        <div class="col-md-3">
                            @if (Model.Direccion.Colonia.Municipio.Estado.Estados == null)
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(string.Empty, "Value", "Text"), "Seleciona un Estado", htmlAttributes: new { id = "ddlEstado", @class = "form-control" })
                            }

                            else
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Estados, "IdEstado", "Nombre"), "Seleciona un Estado", htmlAttributes: new { id = "ddlEstado", @class = "form-control" })
                            }
                        </div>
                   

                   
                        <div class="col-md-3">
                            @if (Model.Direccion.Colonia.Municipio.Municipios == null)
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(string.Empty, "Value", "Text"), "Seleciona un Municipio", htmlAttributes: new { id = "ddlMunicipio", @class = "form-control" })
                            }

                            else
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(Model.Direccion.Colonia.Municipio.Municipios, "IdMunicipio", "Nombre"), "Seleciona un Municipio", htmlAttributes: new { id = "ddlMunicipio", @class = "form-control" })
                            }
                        </div>
                  
                         </div>
                        </div>

                  
                        <div class="col-md-3" style="display:none">
                            @Html.LabelFor(model => model.Direccion.IdDireccion, new { @class = "hidden" })
                            @Html.TextBoxFor(model => model.Direccion.IdDireccion, new { @class = " hidden form-control" })
                            @Html.ValidationMessageFor(model => model.Direccion.IdDireccion)

                        </div>

                           <div class="container">
                         <div class="row">

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Direccion.Calle)
                            @Html.TextBoxFor(model => model.Direccion.Calle, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Direccion.Calle)

                        </div>
                   

                   
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Direccion.NumeroInterior)
                            @Html.TextBoxFor(model => model.Direccion.NumeroInterior, new { @class = " form-control", @id = "txtNumeroInt",  @onkeypress = "return SoloNumeros(event,'lblNumeroInt)" })
                            @Html.ValidationMessageFor(model => model.Direccion.NumeroExterior)
                            @Html.Label("",null, new {@id="lblNumeroInt"})
                        </div>
                  

                 
                        <div class="col-md-3">

                            @Html.LabelFor(model => model.Direccion.NumeroExterior)
                            @Html.TextBoxFor(model => model.Direccion.NumeroExterior, new { @class = " form-control", @id = "txtNumeroExt",  @onkeypress = "return SoloNumeros(event,'lblNumeroExt)" })
                            @Html.ValidationMessageFor(model => model.Direccion.NumeroExterior)
                            @Html.Label("",null, new {@id="lblNumeroExtt"})


                        </div>
                  


                        <div class="col-md-3">
                            @if (Model.Direccion.Colonia.Colonias == null)
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(string.Empty, "Value", "Text"), "Seleciona una Colonia", htmlAttributes: new { id = "ddlColonia", @class = "form-control" })
                            }

                            else
                            {
                                @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(Model.Direccion.Colonia.Colonias, "IdColonia", "Nombre"), "Seleciona una Colonia", htmlAttributes: new { id = "ddlColonia", @class = "form-control" })
                            }
                        </div>
                  
                            </div>
                        </div>
                 

                         <div class="container">
                         <div class="row">
                             
                        <div class="col-md-3">

                            <input type="submit" value="Guardar" class="btn btn-success" />

                            @Html.ActionLink("Regresar", "GetAll", "Usuario", htmlAttributes: new { @class = "btn btn-danger" })

                        </div>

        </div>
    </div>




            }




@section Scripts
{

    <script src="email-validation.js"></script>

    <script src="~/lib/jquery/dist/jquery.js"></script>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="/resources/demos/style.css">
    <script src="https://code.jquery.com/jquery-3.6.0.js"></script>
    <script src="https://code.jquery.com/ui/1.13.1/jquery-ui.js"></script>

    @*CALENDARIO*@

<script type="text/javascript">
            $(function () {
                $("#txtFechaNacimiento").datepicker({
                    dateFormat: 'dd-mm-yy',
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "1930:2022"
                });
            });
            </script>

@*Estado*@


<script type="text/javascript">
    $(document).ready(function () {
        $("#ddlPais").change(function () {
            $("#ddlEstado").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetEstado")',
                dataType: 'json',
                data: { IdPais: $("#ddlPais").val() },
                success: function (estados) {
                    $("#ddlEstado").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                    $.each(estados, function (i, estados) {
                        $("#ddlEstado").append('<option value="'
                            + estados.idEstado + '">'
                            + estados.nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
        })
    })
    </script>

@* Municipio*@


<script type="text/javascript">
    $(document).ready(function () {
        $("#ddlEstado").change(function () {
            $("#ddlMunicipio").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetMunicipio")',
                dataType: 'json',
                data: { IdEstado: $("#ddlEstado").val() },
                success: function (municipios) {
                    $("#ddlMunicipio").append('<option value="0">' + 'Seleccione un Municipio' + '</option>');
                    $.each(municipios, function (i, municipios) {
                        $("#ddlMunicipio").append('<option value="'
                            + municipios.idMunicipio + '">'
                            + municipios.nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
        })
    })
</script>

@* Colonia*@


<script type="text/javascript">
    $(document).ready(function () {
        $("#ddlMunicipio").change(function () {
            $("#ddlColonia").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetColonia")',
                dataType: 'json',
                data: { IdMunicipio: $("#ddlMunicipio").val() },
                success: function (colonias) {
                    $("#ddlColonia").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                    $.each(colonias, function (i, colonias) {
                        $("#ddlColonia").append('<option value="'
                            + colonias.idColonia + '">'
                            + colonias.nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
        })
    })

      


</script>


@*VALIDACIONES NUM, LETRAS*@

<script type="text/javascript">
    
    function readUrl(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                    $('#ImagenPreview').attr('src', e.target.result);
            };
            reader.readAsDataURL(input.files[0]);
        }
    }

           function SoloNumeros(e, controlId) {
        var caracter = e.key;
        if (!/^[0-9]/g.test(caracter)) {
            $('#' + controlId).text("Solo se aceptan numeros");
            $('#' + controlId).css({ "color": "red" });
            return false;
        }
        else {
            $('#' + controlId).text("");
            return true;
        }
         }

         function SoloLetras(e, controlId) {
        var caracter = e.key;
        if (!/^[a-zA-Z ]/g.test(caracter)) {
            $('#' + controlId).text("Solo se aceptan letras");
            $('#' + controlId).css({ "color": "red" });
            return false;
        }
        else {
            $('#' + controlId).text("");
            return true;
        }
         }

</script>

 @*VALIDAR EMAIL*@

    <script>
     function validateEmail(){
                
	// Get our input reference.
	var emailField = document.getElementById('user-email');
	
	// EXPRESION REGULAR
	var validEmail =  /^\w+([.-_+]?\w+)*@@\w+([.-]?\w+)*(\.\w{2,10})+$/;

	// Usando test podemos verificar si el texto coincide
	if( validEmail.test(emailField.value) ){
		
		return true;
	}else{
		alert('Email es invalido');
		return false;
	}
} 

    </script>

    @*VALIDAR PASSWORD*@
    <script>
        function validatePassword() {

            // Get our input reference.
            var emailField = document.getElementById('password');

            // EXPRESION REGULAR
            var validEmail = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[$@@$!%*?&])([A-Za-z\d$@@$!%*?&]|[^ ]){8,15}$/;

            // Usando test podemos verificar si el texto coincide
            if (validEmail.test(emailField.value)) {

                return true;
            } else {
                alert('password es invalido ');
                return false;
            }
        }

        var check = function () {
            if (document.getElementById('password').value ==
                document.getElementById('confirm_password').value) {
                document.getElementById('message').style.color = 'green';
                document.getElementById('message').innerHTML = 'Coinciden';
            } else {
                document.getElementById('message').style.color = 'red';
                document.getElementById('message').innerHTML = 'No Coinciden';
            }
        }


    </script>

    
}